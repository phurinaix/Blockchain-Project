{"version":3,"sources":["containers/Home/Home.js","components/FormGroup.js","components/RequestForm.js","components/SendPubKeyForm.js","containers/Request/Request.js","containers/Error/Error.js","components/Navigation.js","components/Layout.js","App.js","serviceWorker.js","index.js","assets/img/blockcerts_issuers.jpg","assets/img/blockcerts_add_issuer.jpg"],"names":["Home","react_default","a","createElement","className","FormGroup","props","Form","Group","Label","label","Control","type","value","onChange","change","text","Text","RequestForm","Fragment","onSubmit","submit","autoComplete","invalidText","Alert","variant","fetching","Spinner","animation","role","components_FormGroup","studentName","studentNameChange","studentId","studentIdChange","Button","disabled","src","blockcerts_add_issuer","alt","width","oneTimeCode","blockcerts_issuers","Request","state","requestInvalidText","isRequestSuccess","pubKey","diploma","transcript","pubKeyInvalidText","isPubKeySuccess","handleStudentNameChange","event","_this","setState","target","handleStudentIdChange","handleRequestSubmit","preventDefault","axios","post","name","id","then","response","res","data","status","console","log","catch","error","this","SendPubKeyForm","pubKeyChange","handlePubKeyChange","diplomaChange","handleDiplomaChange","transcriptChange","handleTranscriptChange","handlePubKeySubmit","components_RequestForm","Component","Error","Navigation","Navbar","collapseOnSelect","expand","Container","lib","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","Layout","children","App","react_router_dom","src_components_Navigation","components_Layout","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e8701ac8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Thammasat University</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst FormGroup = (props) => {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label>{props.label}</Form.Label>\r\n            <Form.Control type={props.type} value={props.value} onChange={props.change}/>\r\n            {props.text !== '' && <Form.Text className=\"text-muted\">{props.text}</Form.Text>}\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default FormGroup;","import React from 'react';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport FormGroup from './FormGroup';\r\n\r\nconst RequestForm = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Thammasat Blockchain Academic Credential</h1>\r\n            <h4>How to apply for putting your diploma to Blockchain</h4>\r\n            <Form onSubmit={props.submit} className=\"col-md-5\" autoComplete=\"off\">\r\n                { props.invalidText !== '' && <Alert variant=\"danger\">{props.invalidText}</Alert> }\r\n                { props.fetching && <Spinner animation=\"border\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner>}\r\n                <FormGroup label=\"Student name\" type=\"text\" text=\"Your student name must contain only letters and must not contain spaces.\" value={props.studentName} change={props.studentNameChange}/>\r\n                <FormGroup label=\"Student ID\" type=\"text\" text=\"Your student id number must be 10 characters long, contain only numbers and must not contain spaces.\" value={props.studentId} change={props.studentIdChange}/>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100\" disabled={props.fetching}>\r\n                    Send\r\n                </Button>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestForm;","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport blockcerts_issuers from '../assets/img/blockcerts_issuers.jpg';\r\nimport blockcerts_add_issuer from '../assets/img/blockcerts_add_issuer.jpg';\r\n\r\nconst RequestForm = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Form onSubmit={props.submit} className=\"text-center mx-auto\">\r\n                <h4>Please first download the Blockcerts wallet from the link</h4>\r\n                <p>For iOS: <u>https://itunes.apple.com/us/app/blockcerts-wallet/id1146921514?mt=8</u></p>\r\n                <p>For Android: <u>https://play.google.com/store/apps/details?id=com.learningmachine.android.app&hl=en</u></p>\r\n                \r\n                <h4>Install it on your phone or computer.</h4>\r\n                <h4>Once you have your Blockcerts wallet on your phone, Go to add issuer</h4>\r\n                <img src={blockcerts_add_issuer} alt=\"\" width=\"300px\" className=\"instruction_img\"/>\r\n                <h5>Enter the URL: <strong>https://tu-issuer.herokuapp.com/issuer-profile</strong></h5>\r\n                <h5>Enter the one-time-code: <strong>{props.oneTimeCode}</strong></h5>\r\n                <h4>After that you can see issuer in your issuer screen</h4>\r\n                <img src={blockcerts_issuers} alt=\"\" width=\"300px\" className=\"instruction_img\"/>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestForm;","import React, { Component } from 'react';\r\nimport RequestForm from '../../components/RequestForm';\r\nimport SendPubKeyForm from '../../components/SendPubKeyForm';\r\n// import { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Request extends Component {\r\n    state = {\r\n        studentName: '',\r\n        studentId: '',\r\n        requestInvalidText: '',\r\n        isRequestSuccess: false,\r\n        pubKey: '',\r\n        diploma: false,\r\n        transcript: false,\r\n        pubKeyInvalidText: '',\r\n        isPubKeySuccess: false,\r\n        fetching: false,\r\n        oneTimeCode: null\r\n    };\r\n    handleStudentNameChange = (event) => {\r\n        this.setState({\r\n            studentName: event.target.value\r\n        });\r\n    };\r\n    handleStudentIdChange = (event) => {\r\n        this.setState({\r\n            studentId: event.target.value\r\n        });\r\n    };\r\n    handleRequestSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ fetching: true });\r\n        axios.post('https://tu-issuer.herokuapp.com/recipient', {\r\n            name: this.state.studentName,\r\n            id: this.state.studentId\r\n          })\r\n          .then((response) => {\r\n            let res = response.data;\r\n            // return console.log(res + ' ');\r\n            this.setState({ fetching: false });\r\n            if (res.status) {\r\n                console.log(res.oneTimeCode);\r\n                if(res.status === 'success') {\r\n                    this.setState({ \r\n                        requestInvalidText: '',\r\n                        oneTimeCode: res.oneTimeCode,\r\n                        isRequestSuccess: true\r\n                    });\r\n                }\r\n            }else {\r\n                if(res === 'invalid_name') {\r\n                    this.setState({ requestInvalidText: 'Student name must contain only English characters'});\r\n                } else if(res === 'invalid_id') {\r\n                    this.setState({ requestInvalidText: 'Student ID must contain only number'});                \r\n                } else if(res === 'id_length') {\r\n                    this.setState({ requestInvalidText: 'Student ID must consisting of 10 digits'});                \r\n                } else if(res === 'invalid_name_id') {\r\n                    this.setState({ requestInvalidText: 'Student name and Student ID are invalid'});\r\n                }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    };\r\n    render() {\r\n        // console.log('OnetimeCode: ', this.state.oneTimeCode);\r\n        return (\r\n            <div>\r\n                {this.state.isRequestSuccess ?\r\n                    <SendPubKeyForm \r\n                        pubKey={this.state.pubKey}\r\n                        diploma={this.state.diploma}\r\n                        transcript={this.state.transcript}\r\n                        pubKeyChange={this.handlePubKeyChange}\r\n                        diplomaChange={this.handleDiplomaChange}\r\n                        transcriptChange={this.handleTranscriptChange}\r\n                        submit={this.handlePubKeySubmit}\r\n                        invalidText={this.state.pubKeyInvalidText}\r\n                        oneTimeCode={this.state.oneTimeCode}\r\n                    />\r\n                    :\r\n                    <RequestForm \r\n                        studentName={this.state.studentName}\r\n                        studentId={this.state.studentId}\r\n                        studentNameChange={this.handleStudentNameChange}\r\n                        studentIdChange={this.handleStudentIdChange}\r\n                        submit={this.handleRequestSubmit}\r\n                        invalidText={this.state.requestInvalidText}\r\n                        fetching={this.state.fetching}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Request;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>Path doesn't exist !!</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-header mb-5\">\r\n            <Container>\r\n                <LinkContainer to=\"/blockchain-project\">\r\n                    <Navbar.Brand className=\"navbar-logo p-0 m-0\"><img src=\"http://www.tu.ac.th/uploads/main-logo.svg\" width=\"75%\" alt=\"\" /></Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"toggle-button p-0\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto text-center link\">\r\n                        <LinkContainer to=\"/blockchain-project\"><Nav.Link>HOME</Nav.Link></LinkContainer>\r\n                        <LinkContainer to=\"/blockchain-project/request\"><Nav.Link>REQUEST</Nav.Link></LinkContainer>\r\n                        <LinkContainer to=\"#\"><Nav.Link>VERIFY</Nav.Link></LinkContainer>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Container>{props.children}</Container>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Home from './containers/Home/Home';\nimport Request from './containers/Request/Request';\nimport Error from './containers/Error/Error';\nimport Navigation from './components/Navigation';\nimport Layout from './components/Layout';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Layout>\n        <Switch>\n          <Route path=\"/blockchain-project\" component={Home} exact/>\n          <Route path=\"/blockchain-project/request\" component={Request}/>\n          <Route component={Error}/>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blockcerts_issuers.2bd7b3b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blockcerts_add_issuer.74630459.jpg\";"],"sourceRoot":""}
{"version":3,"sources":["components/FormGroup.js","components/LoginForm.js","components/Navigation.js","containers/Home.js","components/NavigationInside.js","containers/Request.js","components/AddIssuerInstruction.js","components/EmailForm.js","containers/Add.js","containers/About.js","containers/Error.js","containers/Profile.js","components/Logout.js","components/Layout.js","App.js","serviceWorker.js","index.js","assets/img/blockcerts_issuers.jpg","assets/img/blockcerts_add_issuer.jpg"],"names":["FormGroup","props","react_default","a","createElement","Form","Group","Label","label","Control","type","value","onChange","change","text","Text","className","LoginForm","Fragment","onSubmit","submit","autoComplete","invalidText","Alert","variant","fetching","Spinner","animation","role","components_FormGroup","studentName","studentNameChange","studentId","studentIdChange","Button","disabled","Navigation","Navbar","collapseOnSelect","expand","Container","lib","to","Brand","src","width","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Home","state","requestInvalidText","handleStudentNameChange","event","_this","setState","target","handleStudentIdChange","handleRequestSubmit","preventDefault","axios","post","name","then","response","res","data","key0","console","log","status","localStorage","setItem","history","push","catch","error","src_components_Navigation","components_LoginForm","this","Component","NavigationInside","NavDropdown","title","Item","href","Divider","Request","diploma","transcript","diplomaChangeHandler","e","checked","transcriptChangeHandler","onSubmitHandler","componentDidMount","key","getItem","err","components_NavigationInside","controlId","Check","AddIssuerInstruction","rel","blockcerts_add_issuer","blockcerts_issuers","EmailForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","emailChangeHandle","email","submitHandle","identity","alertMessage","get","concat","buttonText","Add","isGiveEmail","isGiveEmailHandle","components_AddIssuerInstruction","components_EmailForm","About","Error","Profile","emailHandle","Logout","removeItem","goBack","Layout","children","App","react_router_dom","components_Layout","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e2242684.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst FormGroup = (props) => {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label>{props.label}</Form.Label>\r\n            <Form.Control type={props.type} value={props.value} onChange={props.change}/>\r\n            {props.text !== '' && <Form.Text className=\"text-muted\">{props.text}</Form.Text>}\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default FormGroup;","import React from 'react';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport FormGroup from './FormGroup';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Thammasat Blockchain Academic Credential</h1>\r\n            <h4>How to apply for putting your diploma to Blockchain</h4>\r\n            <Form onSubmit={props.submit} className=\"col-md-5\" autoComplete=\"off\">\r\n                { props.invalidText !== '' && <Alert variant=\"danger\">{props.invalidText}</Alert> }\r\n                { props.fetching && <Spinner animation=\"border\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner>}\r\n                <FormGroup label=\"Student name\" type=\"text\" text=\"Your student name must contain only letters and must not contain spaces. (Example: Phurinat Puekkham)\" value={props.studentName} change={props.studentNameChange}/>\r\n                <FormGroup label=\"Student ID\" type=\"text\" text=\"Your student id number must be 10 characters long, contain only numbers and must not contain spaces.\" value={props.studentId} change={props.studentIdChange}/>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100\" disabled={props.fetching}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-header mb-5\">\r\n            <Container>\r\n                <LinkContainer to=\"/blockchain-project\">\r\n                    <Navbar.Brand className=\"navbar-logo p-0 m-0\"><img src=\"http://www.tu.ac.th/uploads/main-logo.svg\" width=\"75%\" alt=\"\" /></Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"toggle-button p-0\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto text-center link\">\r\n                        <LinkContainer to=\"/blockchain-project\"><Nav.Link>HOME</Nav.Link></LinkContainer>\r\n                        <LinkContainer to=\"/blockchain-project/about\"><Nav.Link>ABOUT</Nav.Link></LinkContainer>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\nimport Navigation from '../components/Navigation';\r\nimport axios from 'axios';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        studentName: '',\r\n        studentId: '',\r\n        requestInvalidText: '',\r\n        fetching: false\r\n    };\r\n    handleStudentNameChange = (event) => {\r\n        this.setState({\r\n            studentName: event.target.value\r\n        });\r\n    };\r\n    handleStudentIdChange = (event) => {\r\n        this.setState({\r\n            studentId: event.target.value\r\n        });\r\n    };\r\n    handleRequestSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ fetching: true });\r\n        axios.post('https://tu-issuer.herokuapp.com/recipient', {\r\n            name: this.state.studentName,\r\n            id: this.state.studentId\r\n          })\r\n          .then((response) => {\r\n            let res = response.data;\r\n            // return console.log(res + ' ');\r\n            this.setState({ fetching: false });\r\n            if (res.key0) {\r\n                console.log(res.key0);\r\n                if(res.status === 'success') {\r\n                    this.setState({ \r\n                        requestInvalidText: '',\r\n                    });\r\n                    localStorage.setItem(\"key0\", res.key0);\r\n                    localStorage.setItem(\"identity\", this.state.studentId);\r\n                    this.props.history.push('/blockchain-project/add');\r\n                }\r\n            }else {\r\n                if(res === 'invalid_name') {\r\n                    this.setState({ requestInvalidText: 'Student name must contain only English characters'});\r\n                } else if(res === 'invalid_id') {\r\n                    this.setState({ requestInvalidText: 'Student ID must contain only number'});                \r\n                } else if(res === 'id_length') {\r\n                    this.setState({ requestInvalidText: 'Student ID must consisting of 10 digits'});                \r\n                } else if(res === 'invalid_name_id') {\r\n                    this.setState({ requestInvalidText: 'Student name and Student ID are invalid'});\r\n                }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navigation />\r\n                <LoginForm \r\n                    studentName={this.state.studentName}\r\n                    studentId={this.state.studentId}\r\n                    studentNameChange={this.handleStudentNameChange}\r\n                    studentIdChange={this.handleStudentIdChange}\r\n                    submit={this.handleRequestSubmit}\r\n                    invalidText={this.state.requestInvalidText}\r\n                    fetching={this.state.fetching}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavDropdown, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport './Navigation.css';\r\n\r\nclass NavigationInside extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" className=\"navbar-header mb-3\">\r\n                <Container>\r\n                    <LinkContainer to=\"/blockchain-project/add\">\r\n                        <Navbar.Brand className=\"navbar-logo p-0 m-0\"><img src=\"http://www.tu.ac.th/uploads/main-logo.svg\" width=\"75%\" alt=\"\" /></Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"toggle-button p-0\"/>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto text-center link\">\r\n                            <LinkContainer to=\"/blockchain-project/add\"><Nav.Link>ADD ISSUER</Nav.Link></LinkContainer>\r\n                            <LinkContainer to=\"/blockchain-project/request\"><Nav.Link>REQUEST</Nav.Link></LinkContainer>\r\n                            <NavDropdown title=\"PROFILE\" id=\"collasible-nav-dropdown\">\r\n                                <LinkContainer to=\"/blockchain-project/profile\"><NavDropdown.Item href=\"#action/3.3\">Your Profile</NavDropdown.Item></LinkContainer>\r\n                                <NavDropdown.Divider />\r\n                                <LinkContainer to=\"/blockchain-project/logout\"><NavDropdown.Item>Log out</NavDropdown.Item></LinkContainer>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationInside;","import React, { Component } from 'react';\r\nimport NavigationInside from '../components/NavigationInside';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass Request extends Component {\r\n    state = {\r\n        diploma: null,\r\n        transcript: null\r\n    }\r\n    diplomaChangeHandler = (e) => {\r\n        this.setState({ diploma: e.target.checked });\r\n    }\r\n    transcriptChangeHandler = (e) => {\r\n        this.setState({ transcript: e.target.checked });\r\n    }\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log('Diploma => ', this.state.diploma);\r\n        console.log('Transcript => ', this.state.transcript);\r\n    }\r\n    componentDidMount = () => {\r\n        axios.post('https://tu-issuer.herokuapp.com/recipient/session', {\r\n                key: localStorage.getItem(\"key0\")\r\n            })\r\n            .then(response => {\r\n                let res = response.data;\r\n                if (res === 'unauthorized') {\r\n                    this.props.history.push('/blockchain-project');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavigationInside />\r\n                <div>\r\n                    <h2>Request</h2>\r\n                    <Form onSubmit={this.onSubmitHandler}>\r\n                        <h5>Which credentials you want ?</h5>\r\n                        <Form.Group controlId=\"formBasicChecbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Diploma\" onChange={this.diplomaChangeHandler}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicChecbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Transcript\" onChange={this.transcriptChangeHandler}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Request;","import React from 'react';\r\nimport blockcerts_issuers from '../assets/img/blockcerts_issuers.jpg';\r\nimport blockcerts_add_issuer from '../assets/img/blockcerts_add_issuer.jpg';\r\n\r\nconst AddIssuerInstruction = (props) => {\r\n    return (\r\n        <div className=\"col-md-7 mx-auto text-center\">\r\n            <h6>Please first download the Blockcerts wallet from the link</h6>\r\n            <p>For IOS: <a href=\"https://itunes.apple.com/us/app/blockcerts-wallet/id1146921514?mt=8\" target=\"_blank\" rel=\"noopener noreferrer\"><u>https://itunes.apple.com/us/app/blockcerts-wallet/id1146921514?mt=8</u></a></p>\r\n            <p>For Android: <a href=\"https://play.google.com/store/apps/details?id=com.learningmachine.android.app&hl=en\" target=\"_blank\" rel=\"noopener noreferrer\"><u>https://play.google.com/store/apps/details?id=com.learningmachine.android.app&hl=en</u></a></p>\r\n            \r\n            <h6>Install it on your phone or computer.</h6>\r\n            <h6>Once you have your Blockcerts wallet on your phone, Go to add issuer</h6>\r\n            <div className=\"bg-light py-4 px-3 m-4\">\r\n                <p>Enter the URL: <strong>https://tu-issuer.herokuapp.com/issuer-profile</strong></p>\r\n                <p>Enter the one-time-code: <strong>Your Student ID</strong></p>\r\n            </div>\r\n            <h6>After that you can see issuer in your issuer screen</h6>\r\n            <br/>\r\n            <img src={blockcerts_add_issuer} alt=\"\" width=\"200px\" className=\"instruction_img mx-4\"/>\r\n            <img src={blockcerts_issuers} alt=\"\" width=\"200px\" className=\"instruction_img mx-4\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddIssuerInstruction;","import React, { Component } from 'react';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport FormGroup from './FormGroup';\r\nimport axios from 'axios';\r\n\r\nclass EmailForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            alertMessage: '',\r\n            fetching: false\r\n        }\r\n    }\r\n    emailChangeHandle = (e) => {\r\n        this.setState({ email: e.target.value });\r\n    };\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ fetching: true });\r\n        var identity = localStorage.getItem(\"identity\");\r\n        if (identity) {\r\n            axios.post('https://tu-issuer.herokuapp.com/recipient/email', {\r\n                    email: this.state.email,\r\n                    identity: identity\r\n                })\r\n                .then(response => {\r\n                    if (response.data === 'success') {\r\n                        this.setState({ \r\n                            alertMessage: '',\r\n                            fetching: false\r\n                        })\r\n                        this.props.email();\r\n                    } else {\r\n                        this.setState({\r\n                            alertMessage: 'Failed',\r\n                            fetching: false\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n    componentDidMount = () => {\r\n        var studentId = localStorage.getItem(\"identity\");\r\n        if (studentId) {\r\n            axios.get(`https://tu-issuer.herokuapp.com/recipient/${studentId}`)\r\n                .then(response => {\r\n                    if (response.data) {\r\n                        this.setState({ email: response.data });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.submitHandle} className=\"col-md-5 mx-auto\" autoComplete=\"off\">\r\n                { this.state.alertMessage !== '' && <Alert variant=\"danger\">{this.state.alertMessage}</Alert> }\r\n                { this.state.fetching && <Spinner animation=\"border\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner>}\r\n                <FormGroup label=\"Student Email\" type=\"email\" text=\"\" value={this.state.email} change={this.emailChangeHandle} disabled={this.state.fetching}/>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100\" disabled={this.state.fetching}>\r\n                    {this.props.buttonText}\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n};\r\n\r\nexport default EmailForm;","import React, { Component } from 'react';\r\nimport NavigationInside from '../components/NavigationInside';\r\nimport AddIssuerInstruction from '../components/AddIssuerInstruction';\r\nimport EmailForm from '../components/EmailForm';\r\nimport axios from 'axios';\r\n\r\nclass Add extends Component {\r\n    state = {\r\n        isGiveEmail: false\r\n    }\r\n    isGiveEmailHandle = () => {\r\n        this.setState({ isGiveEmail: true });\r\n    };\r\n    componentDidMount = () => {\r\n        axios.post('https://tu-issuer.herokuapp.com/recipient/session', {\r\n                key: localStorage.getItem(\"key0\")\r\n            })\r\n            .then(response => {\r\n                let res = response.data;\r\n                if (res === 'unauthorized') {\r\n                    this.props.history.push('/blockchain-project');\r\n                } else {\r\n                    var studentId = localStorage.getItem(\"identity\");\r\n                    axios.get(`https://tu-issuer.herokuapp.com/recipient/${studentId}`)\r\n                        .then(response => {\r\n                            console.log(response);\r\n                            if (response.data) {\r\n                                this.setState({ isGiveEmail: true });\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavigationInside />\r\n                <div className=\"mb-5\">\r\n                    <h3 className=\"text-center\">Add Issuer</h3>\r\n                        {this.state.isGiveEmail ?\r\n                            <AddIssuerInstruction />\r\n                        :\r\n                            <div className=\"text-center\">\r\n                                <h5>You have to provide an email before add issuer</h5>\r\n                                <EmailForm email={this.isGiveEmailHandle} buttonText=\"Submit\"/>\r\n                            </div>\r\n                        }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Add;","import React from 'react';\r\nimport Navigation from '../components/Navigation';\r\n\r\nconst About = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Navigation />\r\n            <div>\r\n                <h1>About Page</h1>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>Path doesn't exist !!</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\nimport NavigationInside from '../components/NavigationInside';\r\nimport EmailForm from '../components/EmailForm';\r\nimport axios from 'axios';\r\n\r\nclass Profile extends Component {\r\n\r\n    emailHandle = () => {\r\n\r\n    }\r\n    componentDidMount = () => {\r\n        axios.post('https://tu-issuer.herokuapp.com/recipient/session', {\r\n                key: localStorage.getItem(\"key0\")\r\n            })\r\n            .then(response => {\r\n                let res = response.data;\r\n                if (res === 'unauthorized') {\r\n                    this.props.history.push('/blockchain-project');\r\n                } else {\r\n                    if (!localStorage.getItem(\"identity\")) {\r\n                        this.props.history.push('/blockchain-project/logout');\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavigationInside />\r\n                <div>\r\n                    <h2 className=\"text-center\">Your Profile</h2>\r\n                    <EmailForm email={this.emailHandle} buttonText=\"Update\"/>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount = () => {\r\n        axios.post('https://tu-issuer.herokuapp.com/recipient/logout', {\r\n                key: localStorage.getItem(\"key0\")\r\n            })\r\n            .then(response => {\r\n                let res = response.data;\r\n                if (res === 'success') {\r\n                    localStorage.removeItem(\"key0\");\r\n                    this.props.history.push('/blockchain-project/');\r\n                } else {\r\n                    this.props.history.goBack();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Container>{props.children}</Container>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Home from './containers/Home';\nimport Request from './containers/Request';\nimport Add from './containers/Add';\nimport About from './containers/About';\nimport Error from './containers/Error';\nimport Profile from './containers/Profile';\nimport Logout from './components/Logout';\nimport Layout from './components/Layout';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route path=\"/blockchain-project\" component={Home} exact/>\n          <Route path=\"/blockchain-project/add\" component={Add}/>\n          <Route path=\"/blockchain-project/request\" component={Request}/>\n          <Route path=\"/blockchain-project/about\" component={About} />\n          <Route path=\"/blockchain-project/profile\" component={Profile} />\n          <Route path=\"/blockchain-project/logout\" component={Logout} />\n          <Route component={Error}/>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blockcerts_issuers.2bd7b3b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blockcerts_add_issuer.74630459.jpg\";"],"sourceRoot":""}